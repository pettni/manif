<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_eigen_1_1_map_3_01manif_1_1_bundle_3_01___scalar_00_01_t_8_8_8_01_4_00_010_01_4" kind="class" language="C++" prot="public">
    <compoundname>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</compoundname>
    <basecompoundref refid="structmanif_1_1_bundle_base" prot="public" virt="non-virtual">manif::BundleBase&lt; Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt; &gt;</basecompoundref>
    <includes refid="_bundle__map_8h" local="no">Bundle_map.h</includes>
    <templateparamlist>
      <param>
        <type>class _Scalar</type>
      </param>
      <param>
        <type>template&lt; typename &gt; class ...</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_eigen_1_1_map_3_01manif_1_1_bundle_3_01___scalar_00_01_t_8_8_8_01_4_00_010_01_4_1a216d3176fe92a8ad7fdbfc6bf296e0d8" prot="private" static="no">
        <type><ref refid="structmanif_1_1_bundle_base" kindref="compound">manif::BundleBase</ref>&lt; Map&lt; <ref refid="structmanif_1_1_bundle" kindref="compound">manif::Bundle</ref>&lt; _Scalar, T... &gt;, 0 &gt; &gt;</type>
        <definition>using Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;::Base =  manif::BundleBase&lt;Map&lt;manif::Bundle&lt;_Scalar, T...&gt;, 0&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/bundle/Bundle_map.h" line="48" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/bundle/Bundle_map.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_eigen_1_1_map_3_01manif_1_1_bundle_3_01___scalar_00_01_t_8_8_8_01_4_00_010_01_4_1a43fa29fb17bc6857e4ed393ff999b6fb" prot="protected" static="no" mutable="no">
        <type>DataType</type>
        <definition>DataType Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/bundle/Bundle_map.h" line="67" column="12" bodyfile="/home/runner/work/manif/manif/include/manif/impl/bundle/Bundle_map.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_eigen_1_1_map_3_01manif_1_1_bundle_3_01___scalar_00_01_t_8_8_8_01_4_00_010_01_4_1a541b7681b8e6b3a44eec4f7d76927921" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;::Map</definition>
        <argsstring>(Scalar *coeffs)</argsstring>
        <name>Map</name>
        <param>
          <type>Scalar *</type>
          <declname>coeffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/bundle/Bundle_map.h" line="57" column="3" bodyfile="/home/runner/work/manif/manif/include/manif/impl/bundle/Bundle_map.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_eigen_1_1_map_3_01manif_1_1_bundle_3_01___scalar_00_01_t_8_8_8_01_4_00_010_01_4_1afed042aca123535729e40b8e04e48a48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DataType &amp;</type>
        <definition>DataType&amp; Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;::coeffs</definition>
        <argsstring>()</argsstring>
        <name>coeffs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/bundle/Bundle_map.h" line="61" column="13" bodyfile="/home/runner/work/manif/manif/include/manif/impl/bundle/Bundle_map.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_eigen_1_1_map_3_01manif_1_1_bundle_3_01___scalar_00_01_t_8_8_8_01_4_00_010_01_4_1a9f82525a9a77e98ebfe5927d4781144b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const DataType &amp;</type>
        <definition>const DataType&amp; Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;::coeffs</definition>
        <argsstring>() const</argsstring>
        <name>coeffs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/manif/manif/include/manif/impl/bundle/Bundle_map.h" line="63" column="19" bodyfile="/home/runner/work/manif/manif/include/manif/impl/bundle/Bundle_map.h" bodystart="63" bodyend="63"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Specialization of Map for <ref refid="structmanif_1_1_bundle" kindref="compound">manif::Bundle</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01manif_1_1_bundle_3_01___scalar_00_01_t_8_8_8_01_4_00_010_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>manif::BundleBase&lt; Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_bundle_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>manif::LieGroupBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_lie_group_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</label>
        <link refid="class_eigen_1_1_map_3_01manif_1_1_bundle_3_01___scalar_00_01_t_8_8_8_01_4_00_010_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>manif::BundleBase&lt; Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt; &gt;</label>
        <link refid="structmanif_1_1_bundle_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>manif::LieGroupBase&lt; _Derived &gt;</label>
        <link refid="structmanif_1_1_lie_group_base"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/manif/manif/include/manif/impl/bundle/Bundle_map.h" line="45" column="1" bodyfile="/home/runner/work/manif/manif/include/manif/impl/bundle/Bundle_map.h" bodystart="47" bodyend="68"/>
    <listofallmembers>
      <member refid="structmanif_1_1_lie_group_base_1a7fe44175f7ad70476c640d4745d7c6c9" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>_</name></member>
      <member refid="structmanif_1_1_bundle_base_1a9bd53241144cb3b48c11c401ee0d3d83" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>act</name></member>
      <member refid="structmanif_1_1_lie_group_base_1adc60eaf39fd497125f94e7b437f5d86f" prot="public" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>act</name></member>
      <member refid="structmanif_1_1_bundle_base_1ad8c431f3b5044e06995f5a2392af8913" prot="protected" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>act_impl</name></member>
      <member refid="structmanif_1_1_bundle_base_1adaf0db441589aabdf1fdcb043496f215" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>act_impl</name></member>
      <member refid="structmanif_1_1_bundle_base_1a1837554a8cd97811fac528abf0b538da" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>adj</name></member>
      <member refid="structmanif_1_1_bundle_base_1ad11d952eddb06a079fe39887c1ea0de8" prot="protected" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>adj_impl</name></member>
      <member refid="class_eigen_1_1_map_3_01manif_1_1_bundle_3_01___scalar_00_01_t_8_8_8_01_4_00_010_01_4_1a216d3176fe92a8ad7fdbfc6bf296e0d8" prot="private" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>Base</name></member>
      <member refid="structmanif_1_1_bundle_base_1a65aa6cd8ac5f4a1a17c8c2aff2d14d48" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>BegDoF</name></member>
      <member refid="structmanif_1_1_bundle_base_1a7a81bc49b0cddd17a599299dc1eaff24" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>BegRep</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7351c9a0e8fe51c72978626efa12d97c" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>between</name></member>
      <member refid="structmanif_1_1_bundle_base_1ac189bec928567bf86eb83a2f05e9341e" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>BundleSize</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad0db8fc1317d2ea0f6f210a6b274ec88" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>cast</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a0ef0052589be75ef70ca7770cf73def7" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>cast</name></member>
      <member refid="class_eigen_1_1_map_3_01manif_1_1_bundle_3_01___scalar_00_01_t_8_8_8_01_4_00_010_01_4_1afed042aca123535729e40b8e04e48a48" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>coeffs</name></member>
      <member refid="class_eigen_1_1_map_3_01manif_1_1_bundle_3_01___scalar_00_01_t_8_8_8_01_4_00_010_01_4_1a9f82525a9a77e98ebfe5927d4781144b" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>coeffs</name></member>
      <member refid="structmanif_1_1_bundle_base_1a9263dbb22c4a6ef9906ec656624dbb8d" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>compose</name></member>
      <member refid="structmanif_1_1_bundle_base_1a2876e82b83c8fb7e50d4c30b8bb4c2a8" prot="protected" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>compose_impl</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7d766d75afce68d88e7b83108b1bde3d" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>data</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a58250b5749c58fe57a7ecd14c4009dd0" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>data</name></member>
      <member refid="class_eigen_1_1_map_3_01manif_1_1_bundle_3_01___scalar_00_01_t_8_8_8_01_4_00_010_01_4_1a43fa29fb17bc6857e4ed393ff999b6fb" prot="protected" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>data_</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a59562d75de51334eab68426521a4e923" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>DataType</name></member>
      <member refid="structmanif_1_1_bundle_base_1a7ce9db9ccb753dbe014d050fad09c385" prot="protected" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>derived</name></member>
      <member refid="structmanif_1_1_bundle_base_1a9380b9ee1ed9bbdcf3dcf284571f6901" prot="protected" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>derived</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7ce9db9ccb753dbe014d050fad09c385" prot="protected" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>derived</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a9380b9ee1ed9bbdcf3dcf284571f6901" prot="protected" virt="non-virtual" ambiguityscope="manif::LieGroupBase::"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>derived</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a42a00de7f4c6ae7e8a11568dfd4a43a8" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>Dim</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a613898f9799c5317567b33a1fabe726e" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>DoF</name></member>
      <member refid="structmanif_1_1_bundle_base_1a0e5a93b427b3c84fd98353cee2b67053" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>element</name></member>
      <member refid="structmanif_1_1_bundle_base_1a842ecc50ad3cd93fbc4f681f81b4b29e" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>element</name></member>
      <member refid="structmanif_1_1_bundle_base_1a62974e4dab9c2324fdce2c9278fbe03e" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>element</name></member>
      <member refid="structmanif_1_1_bundle_base_1a1b10f3b0e115304d8a2905c987e522d2" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>element</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a34a63b85f977cb40012be342f902404a" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>Identity</name></member>
      <member refid="structmanif_1_1_bundle_base_1a8475edee4bdc7f4f4e2f21d2ec3ba31d" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>inverse</name></member>
      <member refid="structmanif_1_1_bundle_base_1ab3e828be3e25b446c017b16444ad2ec0" prot="protected" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>inverse_impl</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ac4d00c4834b1415eef9fb7a14dc8f708" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>isApprox</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ac02491bfe309ff4a384ca4394f153d6c" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>Jacobian</name></member>
      <member refid="structmanif_1_1_bundle_base_1a65332249c7868a428bdb521ac8b49cb6" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>LenDoF</name></member>
      <member refid="structmanif_1_1_bundle_base_1a4ed4e9d20292dfd6bdefe30b04b65541" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>LenRep</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a1f015474f257f800bcd826787b26bcfc" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>LieGroup</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a536b5307a15fd40b0e5eb87c0344d6a8" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>LieGroupTemplate</name></member>
      <member refid="structmanif_1_1_bundle_base_1ae5c84d85c0c57a58c043be4773dbcd2e" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>lift</name></member>
      <member refid="structmanif_1_1_lie_group_base_1aef8d336d81a657e541e5ff48e5a08b1c" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>lminus</name></member>
      <member refid="structmanif_1_1_bundle_base_1a47c1741f0ab1ca52430a7a73289c120b" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>log</name></member>
      <member refid="structmanif_1_1_bundle_base_1acc8cd84d0ed50827acf5036519788974" prot="protected" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>log_impl</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad6af777d6c8914c59ce88a76db6f4775" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>lplus</name></member>
      <member refid="class_eigen_1_1_map_3_01manif_1_1_bundle_3_01___scalar_00_01_t_8_8_8_01_4_00_010_01_4_1a541b7681b8e6b3a44eec4f7d76927921" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>Map</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a3912f9ef389576c9038ce2d544b4b833" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>minus</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a4e49d3cf3538e03ff7d19c1602da19cc" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>operator*</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a019031c758bfb21a7030cd97843d4b4d" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>operator*=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a1a497184154ab95cc4cc4d14eb07c513" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>operator+</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a2a3e11651c59644d8f5f3705d0b257de" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>operator+=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1af59dd9dc829de8f8f49ecf4bee27fedd" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>operator-</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ac411dc1b8a4456a3bae4afd152abddaa" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ab3b5b3153e4d50982f9f71d104c8c37f" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a2b270c001e289786a499d76d886a5869" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>operator=</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a5d68ac830a6191abb32eccc874612bef" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>operator==</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a9e323b97f09981a2b0d1973f8d81b21b" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>OptJacobianRef</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a74d5760f793fbfdeec248b34b3360d1c" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>plus</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a0c1def597571453671f7762c4e511e05" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>Random</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a229272dd86ff795a11848855b7072b20" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>RepSize</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ad6c5f9dc430ca6b0ff1eb5cc58c9faed" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>rminus</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a2a36d6106e38cd7fac46510e6458a119" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>rplus</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a7215753f62eaeced0a3c8f53147938e3" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>Scalar</name></member>
      <member refid="structmanif_1_1_lie_group_base_1aa154961cb80b013d3d1d66132e487f33" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>setIdentity</name></member>
      <member refid="structmanif_1_1_lie_group_base_1a3d9dc0ea239fa48ca9d75d11e08e020d" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>setRandom</name></member>
      <member refid="structmanif_1_1_lie_group_base_1ab920e7e67b4e174ad7e291cd10945827" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>Tangent</name></member>
      <member refid="structmanif_1_1_bundle_base_1a3deff81df5de215b87e8a78f94731217" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>transform</name></member>
      <member refid="structmanif_1_1_bundle_base_1a9a5f4cd1174d2cbe57326f77128984d2" prot="protected" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>transform_impl</name></member>
      <member refid="structmanif_1_1_bundle_base_1a8a84237087f300ccbe9ae79118f1eb65" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>Transformation</name></member>
      <member refid="structmanif_1_1_lie_group_base_1aefcb523771afb5c59a70fb2d869598eb" prot="public" virt="non-virtual"><scope>Eigen::Map&lt; manif::Bundle&lt; _Scalar, T... &gt;, 0 &gt;</scope><name>Vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
